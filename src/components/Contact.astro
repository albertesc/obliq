---
import Input from "@/components/atoms/Input.astro";
import Textarea from "@/components/atoms/Textarea.astro";
import { actions } from "astro:actions";
import { getI18N } from "@/a18n/index.ts";
import { getRelativeLocaleUrl } from "astro:i18n";
import Button from "./atoms/Button.astro";

const { currentLocale } = Astro;
const t = getI18N({ currentLocale: currentLocale ?? "es" });
---

<section
  id="contact"
  class="bg-black pt-10 pb-20 z-10 relative"
  role="region"
  aria-labelledby="contact-heading"
  style="scroll-margin-top: 80px"
>
  <div class="container mx-auto px-4">
    <div class="grid grid-cols-1 lg:grid-cols-12 gap-6 lg:gap-16">
      <div class="col-span-12 lg:col-span-5">
        <h2 class="text-5xl mb-8">{t.CONTACT.TITLE}</h2>

        <a href="tel:675489980" class="flex items-center gap-2 mt-4">
          <svg
            width="17"
            height="17"
            viewBox="0 0 17 17"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M14.7245 13.1704C14.7245 13.4104 14.6711 13.657 14.5578 13.897C14.4445 14.137 14.2978 14.3637 14.1045 14.577C13.7778 14.937 13.4178 15.197 13.0111 15.3637C12.6111 15.5304 12.1778 15.617 11.7111 15.617C11.0311 15.617 10.3045 15.457 9.5378 15.1304C8.77113 14.8037 8.00447 14.3637 7.24447 13.8104C6.4778 13.2504 5.75113 12.6304 5.0578 11.9437C4.37113 11.2504 3.75113 10.5237 3.1978 9.76369C2.65113 9.00369 2.21113 8.24369 1.89113 7.49036C1.57113 6.73036 1.41113 6.00369 1.41113 5.31036C1.41113 4.85702 1.49113 4.42369 1.65113 4.02369C1.81113 3.61702 2.06447 3.24369 2.4178 2.91036C2.84447 2.49036 3.31113 2.28369 3.80447 2.28369C3.99113 2.28369 4.1778 2.32369 4.34447 2.40369C4.5178 2.48369 4.67113 2.60369 4.79113 2.77702L6.3378 4.95702C6.4578 5.12369 6.54447 5.27702 6.60447 5.42369C6.66447 5.56369 6.6978 5.70369 6.6978 5.83036C6.6978 5.99036 6.65113 6.15036 6.5578 6.30369C6.47113 6.45702 6.34447 6.61702 6.18447 6.77702L5.6778 7.30369C5.60447 7.37702 5.57113 7.46369 5.57113 7.57036C5.57113 7.62369 5.5778 7.67036 5.59113 7.72369C5.61113 7.77702 5.63113 7.81702 5.64447 7.85702C5.76447 8.07702 5.97113 8.36369 6.26447 8.71036C6.56447 9.05702 6.88447 9.41036 7.23113 9.76369C7.59113 10.117 7.9378 10.4437 8.29113 10.7437C8.6378 11.037 8.92447 11.237 9.15113 11.357C9.18447 11.3704 9.22447 11.3904 9.27113 11.4104C9.32447 11.4304 9.3778 11.437 9.4378 11.437C9.55113 11.437 9.6378 11.397 9.71113 11.3237L10.2178 10.8237C10.3845 10.657 10.5445 10.5304 10.6978 10.4504C10.8511 10.357 11.0045 10.3104 11.1711 10.3104C11.2978 10.3104 11.4311 10.337 11.5778 10.397C11.7245 10.457 11.8778 10.5437 12.0445 10.657L14.2511 12.2237C14.4245 12.3437 14.5445 12.4837 14.6178 12.6504C14.6845 12.817 14.7245 12.9837 14.7245 13.1704Z"
              stroke="white"
              stroke-miterlimit="10"></path>
            <path
              d="M12.4112 6.95003C12.4112 6.55003 12.0979 5.9367 11.6312 5.4367C11.2045 4.9767 10.6379 4.6167 10.0779 4.6167"
              stroke="white"
              stroke-linecap="round"
              stroke-linejoin="round"></path>
            <path
              d="M14.7445 6.95036C14.7445 4.37036 12.6579 2.28369 10.0779 2.28369"
              stroke="white"
              stroke-linecap="round"
              stroke-linejoin="round"></path>
          </svg>
          {t.CONTACT.PHONE_LABEL}
        </a>

        <a
          href="mailto:info@obliqproductions.com"
          class="flex items-center gap-2 mt-4"
        >
          <svg
            width="18"
            height="14"
            viewBox="0 0 18 14"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
          >
            <path
              d="M15.6023 0.498718H2.55344C1.6955 0.498718 1 1.19422 1 2.05216V11.3728C1 12.2307 1.6955 12.9262 2.55344 12.9262H15.6023C16.4603 12.9262 17.1558 12.2307 17.1558 11.3728V2.05216C17.1558 1.19422 16.4603 0.498718 15.6023 0.498718Z"
              stroke="white"
              stroke-linecap="round"
              stroke-linejoin="round"></path>
            <path
              d="M3.4856 2.98419L9.07798 7.33383L14.6704 2.98419"
              stroke="white"
              stroke-linecap="round"
              stroke-linejoin="round"></path>
          </svg>
          {t.CONTACT.EMAIL_LABEL}
        </a>
      </div>

      <div class="col-span-12 lg:col-span-6 lg:col-start-7">
        <form method="POST" action={actions.send}>
          <div
            class="errors rounded mb-4 bg-red-200 text-red-600 p-4 hidden border border-red-400"
          >
            {t.CONTACT.FORM.ERRORS}
          </div>

          <div id="product" class="mb-4 hidden">
            {t.CONTACT.FORM.INTERESTED_LABEL}
            <strong></strong><br />
            {t.CONTACT.FORM.INTERESTED_LABEL2}
          </div>
          <Input label={t.CONTACT.FORM.NAME_LABEL} name="name" />
          <Input label={t.CONTACT.FORM.EMAIL_LABEL} name="email" />
          <Input label={t.CONTACT.FORM.COMPANY_LABEL} name="company" />
          <Textarea label={t.CONTACT.FORM.MESSAGE_LABEL} name="message" />

          <div class="flex items-start gap-2 mb-4 mt-4">
            <div class="flex-none relative">
              <input
                type="checkbox"
                name="legal"
                id="legal"
                class="peer appearance-none w-4.5 h-4.5 border bg-white/20 checked:bg-white checked:text-black text-transparent flex items-center justify-center"
                required
                aria-required="true"
              />
              <svg
                class="w-4.5 h-4.5 absolute top-0 left-0 pointer-events-none text-black opacity-0 peer-checked:opacity-100"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
                stroke-width="3"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M5 13l4 4L19 7"></path>
              </svg>
            </div>

            <label for="legal" class="text-sm">
              {t.CONTACT.FORM.TERMS1}
              <a
                href={getRelativeLocaleUrl(currentLocale ?? "es", "/legal")}
                class="underline"
                data-page-color="white"
              >
                {t.FOOTER.LEGAL}
              </a>. *
            </label>
          </div>

          <div class="flex items-start gap-2 mb-4">
            <div class="flex-none relative">
              <input
                type="checkbox"
                name="subscribe"
                id="subscribe"
                class="peer appearance-none w-4.5 h-4.5 border bg-white/20 checked:bg-white checked:text-black text-transparent flex items-center justify-center"
                aria-required="true"
              />
              <svg
                class="w-4.5 h-4.5 absolute top-0 left-0 pointer-events-none text-black opacity-0 peer-checked:opacity-100"
                fill="none"
                viewBox="0 0 24 24"
                stroke="currentColor"
                stroke-width="3"
              >
                <path
                  stroke-linecap="round"
                  stroke-linejoin="round"
                  d="M5 13l4 4L19 7"></path>
              </svg>
            </div>

            <label for="subscribe" class="text-sm">
              <p set:html={t.CONTACT.FORM.TERMS2} />
              <a
                href={getRelativeLocaleUrl(currentLocale ?? "es", "/legal")}
                class="underline"
                data-page-color="white"
              >
                {t.FOOTER.LEGAL}
              </a>.
            </label>
          </div>
          <small class="block mb-6">{t.CONTACT.FORM.REQUIRED_NOTE}</small>

          <div
            class="success hidden rounded mb-4 bg-green-200 text-green-600 p-4 border border-green-400"
          >
            <p class="mb-3">{t.CONTACT.FORM.SUCCESS_MESSAGE.LINE_1}</p>
            <p>{t.CONTACT.FORM.SUCCESS_MESSAGE.LINE_2}</p>
          </div>

          <Button tag="button" disabled>
            {t.CONTACT.FORM.SUBMIT_BUTTON}
          </Button>
        </form>
      </div>
    </div>
  </div>
</section>

<script>
  import { getI18N } from "@/a18n/index.ts";

  const currentLocale = navigator.language || navigator.languages[0];
  const t = getI18N({ currentLocale: currentLocale ?? "es" });

  document.addEventListener("DOMContentLoaded", () => {
    const params = new URLSearchParams(window.location.search);
    const value = params.get("product");
    console.log("Query param 'product':", value);
    if (value) {
      const input = document.querySelector("#product") as HTMLDivElement | null;
      if (input) {
        input.classList.remove("hidden");
        input.querySelector("strong")!.textContent = value;
      }
    }
    const form = document.querySelector("#contact form");

    if (form) {
      const name = form.querySelector(
        'input[name="name"]'
      ) as HTMLInputElement | null;
      const email = form.querySelector(
        'input[name="email"]'
      ) as HTMLInputElement | null;
      const company = form.querySelector(
        'input[name="company"]'
      ) as HTMLInputElement | null;
      const message = form.querySelector(
        'textarea[name="message"]'
      ) as HTMLTextAreaElement | null;
      const legal = form.querySelector(
        'input[name="legal"]'
      ) as HTMLInputElement | null;
      const subscribe = form.querySelector(
        'input[name="subscribe"]'
      ) as HTMLInputElement | null;
      const submitButton = form.querySelector("form button");

      const errorsDiv = form.querySelector(".errors");
      const successDiv = form.querySelector(".success");

      legal?.addEventListener("change", () => {
        if (legal.checked) {
          submitButton?.removeAttribute("disabled");
        } else {
          submitButton?.setAttribute("disabled", "true");
        }
      });

      form.addEventListener("submit", async (event) => {
        event.preventDefault();

        if (!email?.value || !legal?.checked) {
          errorsDiv?.classList.remove("hidden");
          errorsDiv!.innerHTML = `
              <p class="mb-3">${t.CONTACT.FORM.ERRORS}</p>
              <ul class="list-disc pl-5">
                ${!email?.value ? `<li>${t.CONTACT.FORM.EMAIL_REQUIRED}</li>` : ""}
                ${!legal?.checked ? `<li>${t.CONTACT.FORM.LEGAL_REQUIRED}</li>` : ""}
              </ul>
            `;
          errorsDiv?.scrollIntoView({ behavior: "smooth" });
          return;
        }

        try {
          const response = await fetch("/api/send", {
            method: "POST",
            headers: {
              "Content-Type": "application/json",
            },
            body: JSON.stringify({
              name: name?.value,
              email: email?.value,
              company: company?.value,
              message: message?.value,
              product: value,
              legal: legal?.checked,
              subscribe: subscribe?.checked,
            }),
          });

          const contentType = response.headers.get("Content-Type");
          const data = contentType?.includes("application/json")
            ? await response.json()
            : await response.text();

          if (!response.ok) {
            errorsDiv?.classList.remove("hidden");
            errorsDiv!.innerHTML = `<p class="mb-3">${t.CONTACT.FORM.ERRORS}</p><p>${data?.error || data}</p>`;
            errorsDiv?.scrollIntoView({ behavior: "smooth" });
            return;
          }

          successDiv?.classList.remove("hidden");
          setTimeout(() => {
            successDiv?.classList.add("hidden");
          }, 5000);

          errorsDiv?.classList.add("hidden");
          (form as HTMLFormElement).reset();
        } catch (error) {
          errorsDiv?.classList.remove("hidden");
          errorsDiv!.innerHTML = `<p class="mb-3">${t.CONTACT.FORM.ERRORS}</p>`;
          errorsDiv?.scrollIntoView({ behavior: "smooth" });
        }
      });
    }
  });
</script>
