---
export interface Props {
  pageColor?: string;
}
import Menu from "@/components/organisms/Menu.astro";
import { getI18N } from "@/a18n/index.ts";
import { getRelativeLocaleUrl } from "astro:i18n";

const { currentLocale } = Astro;
const t = getI18N({ currentLocale: currentLocale ?? "es" });
const { pageColor } = Astro.props;

const isCurrentLink = (href: string) =>
  Astro.url.pathname === href || Astro.url.pathname.startsWith(href + "/");
---

<header
  class:list={[
    "fixed top-0 w-full h-16 md:h-20 z-50",
    pageColor === "white" ? "bg-white text-black" : "bg-black text-white",
  ]}
  role="banner"
>
  <div
    class="container mx-auto flex justify-between md:grid md:grid-cols-[1fr_auto_1fr] gap-3 items-center h-full px-4"
  >
    <span class="hidden md:block">
      <a
        href={getRelativeLocaleUrl(currentLocale ?? "es", "/")}
        class:list={[
          "hover:text-primary text-xl md:text-base uppercase",
          isCurrentLink(getRelativeLocaleUrl(currentLocale ?? "es", "/")) &&
            "font-bold italic",
        ]}
      >
        {t.MENU.WORK}
      </a>
    </span>

    <a href="/" class="logo md:mx-auto" aria-label={t.GLOBAL.OWNER}>
      {
        pageColor === "white" ? (
          <img
            src="/logo.svg"
            alt={`Logotipo de ${t.GLOBAL.OWNER}`}
            class="w-32 md:-translate-x-11"
          />
        ) : (
          <img
            src="/logo.gif"
            alt={`Logotipo de ${t.GLOBAL.OWNER}`}
            class="w-56 -translate-x-11"
          />
        )
      }
    </a>

    <Menu />
  </div>
</header>
