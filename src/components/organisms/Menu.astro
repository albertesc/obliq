---
import MenuBurger from "@/assets/icons/burger.svg";
import CloseIcon from "@/assets/icons/close.svg";
import { getI18N } from "@/a18n/index.ts";
import { getRelativeLocaleUrl } from "astro:i18n";

const { currentLocale } = Astro;
const t = getI18N({ currentLocale: currentLocale ?? "es" });

const menuLinks = [
  {
    text: t.MENU.ABOUT,
    href: getRelativeLocaleUrl(currentLocale ?? "es", "/about"),
  },
  {
    text: t.MENU.RENTAL,
    href: getRelativeLocaleUrl(currentLocale ?? "es", "/rental"),
  },
  {
    text: t.MENU.CONTACT,
    href: getRelativeLocaleUrl(currentLocale ?? "es", "/contact"),
  },
];

const classes = {
  link: "hover:text-primary text-xl md:text-base uppercase",
};
---

<div
  class="main-menu fixed inset-0 left-0 z-50 bg-white md:bg-transparent h-full w-full p-8 translate-x-full
    md:static md:w-auto md:p-0 md:translate-0"
>
  <nav
    area-label="NavegaciÃ³n principal"
    class="h-full text-black md:text-white"
  >
    <ul
      role="menu"
      class="flex flex-col gap-4 h-full md:flex-row md:justify-end md:gap-12 md:items-center"
    >
      {
        menuLinks.map((link) => (
          <li role="none">
            <a href={link.href} class:list={classes.link} role="menuitem">
              {link.text}
            </a>
          </li>
        ))
      }
    </ul>
  </nav>

  <button
    class="close-button absolute top-4 right-4 md:hidden"
    aria-label={t.MENU.CLOSE_MENU}
  >
    <span class="sr-only">{t.MENU.CLOSE_MENU}</span>
    <CloseIcon width={32} height={32} />
  </button>
</div>

<button class="burger-menu md:hidden ml-auto">
  <span class="sr-only">{t.MENU.OPEN_MENU}</span>
  <MenuBurger width={32} height={32} />
</button>

<script>
  import { gsap } from "gsap";
  const burgerButton = document.querySelector(".burger-menu");
  const mainMenu = document.querySelector(".main-menu");
  const closeButton = document.querySelector(".close-button");
  const menuLinks = document.querySelectorAll(".main-menu a");

  const openMenu = () => {
    gsap.to(mainMenu, { x: 0, duration: 0.3, ease: "power2.out" });
  };
  const closeMenu = () => {
    gsap.to(mainMenu, { x: "100%", duration: 0.3, ease: "power2.in" });
  };

  burgerButton?.addEventListener("click", openMenu);
  closeButton?.addEventListener("click", closeMenu);

  const isMobile = window.matchMedia("(max-width: 1024px)").matches;
  isMobile &&
    menuLinks.forEach((li) => li.addEventListener("click", closeMenu));
</script>
