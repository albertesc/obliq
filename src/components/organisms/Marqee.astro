---
import type { b } from "node_modules/tailwindcss/dist/types-B254mqw1.d.mts";

export interface Props {
  texts: string[];
  small?: boolean;
}
const { texts, small } = Astro.props;
---

<section class="marquee overflow-hidden py-8 cursor-default whitespace-nowrap">
  <div class:list={["marquee-track flex", small ? "gap-1" : "gap-5 md:gap-20"]}>
    {
      texts.map((text) => (
        <div
          class:list={[
            "marquee-content flex items-center",
            small ? "gap-4" : "gap-5 md:gap-20",
          ]}
        >
          <span
            class:list={[
              "uppercase font-black italic leading-none",
              small ? "text-[48px] opacity-50" : "text-[80px] md:text-[200px]",
            ]}
          >
            {text}
          </span>
          <svg
            width="92"
            height="140"
            viewBox="0 0 92 140"
            fill="none"
            xmlns="http://www.w3.org/2000/svg"
            class:list={[
              "flex-none",
              small ? "h-10 w-10 opacity-50" : "h-14 md:h-[140px] opacity-100",
            ]}
          >
            <path d="M0 139L50.6272 0H92L41.3728 139H0Z" fill="currentColor" />
          </svg>
        </div>
      ))
    }
  </div>
</section>

<script>
  import gsap from "gsap";

  function initMarquee() {
    const marquee = document.querySelectorAll(".marquee");

    marquee.forEach((el) => {
      const track = el.querySelector(".marquee-track") as HTMLElement;

      const distance = track.offsetWidth / 2;

      gsap.to(track, {
        x: `-=${distance}`,
        duration: 8,
        ease: "linear",
        repeat: -1,
        modifiers: {
          x: gsap.utils.unitize((x) => parseFloat(x) % distance),
        },
      });
    });
  }

  initMarquee();
  document.addEventListener("astro:after-swap", initMarquee);
</script>
