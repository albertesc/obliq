---
// src/components/TransitionMask.astro
---

<div
  id="transition-mask"
  class="fixed inset-0 z-[999] pointer-events-none bg-black"
>
</div>

<script>
  import gsap from "gsap";

  function initTransitionMask() {
    const mask = document.getElementById("transition-mask") as HTMLDivElement;

    // if main data-page-col
    const isWhitePage =
      document.querySelector("main")?.getAttribute("data-page-color") ===
      "white";

    console.log("TransitionMask initialized", {
      isWhitePage,
    });

    const slideIn = () =>
      new Promise((resolve) => {
        gsap.set(mask, {
          y: "-100%",
          backgroundColor: isWhitePage ? "white" : "black",
        });
        gsap.to(mask, {
          y: 0,
          duration: 1,
          ease: "power2.inOut",
          onStart: () => mask?.classList.remove("pointer-events-none"),
          onComplete: resolve,
        });
      });

    const slideOut = () =>
      new Promise<void>((resolve) => {
        gsap
          .timeline()
          .to(mask, {
            duration: 1,
            backgroundColor: isWhitePage ? "white" : "black",
          })
          .to(mask, {
            y: "-100%",
            duration: 1,
            ease: "power2.inOut",
            onStart: () => mask?.classList.remove("pointer-events-none"),
          });
        resolve();
      });

    document.querySelectorAll("a[href]:not(.video-item)").forEach((link) => {
      const anchor = link as HTMLAnchorElement;
      const url = new URL(anchor.href);
      const isSameOrigin = location.origin === url.origin;

      if (!isSameOrigin || anchor.target === "_blank") return;

      anchor.addEventListener("click", async (e) => {
        e.preventDefault();
        const href = anchor.href;

        await slideIn();
        window.location.href = href;
      });
    });

    slideOut();
  }

  initTransitionMask();

  document.addEventListener("astro:after-swap", () => {
    initTransitionMask();
  });
</script>
